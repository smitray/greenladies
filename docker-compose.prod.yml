version: '3'
services:
  frontend:
    image: rsrp/greenladies-frontend
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
    environment:
      - GRAPHQL_API_ENDPOINT=${FRONTEND_GRAPHQL_API_ENDPOINT}
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entryPoints=https
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.tls.certresolver=letsencrypt

  backend:
    image: rsrp/greenladies-backend
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    environment:
      - DOMAIN
      - MAGENTO_INTEGRATION_ACCESS_TOKEN=${BACKEND_MAGENTO_INTEGRATION_ACCESS_TOKEN}
      - KLARNA_API=${BACKEND_KLARNA_API}
      - KLARNA_USER_ID=${BACKEND_KLARNA_USER_ID}
      - KLARNA_PASSWORD=${BACKEND_KLARNA_PASSWORD}
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`${DOMAIN}`)&&PathPrefix(`/api`)
      - traefik.http.routers.backend.entryPoints=https
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.tls.certresolver=letsencrypt

  redis-cache:
    image: redis:6.0.6

  magento2:
    image: rsrp/greenladies-magento2
    build:
      context: magento2
      dockerfile: Dockerfile
    volumes:
      - ${MAGENTO_DATA_FOLDER}:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.magento.rule=Host(`magento.${DOMAIN}`)
      - traefik.http.routers.magento.entryPoints=https
      - traefik.http.routers.magento.tls=true
      - traefik.http.routers.magento.tls.certresolver=letsencrypt
      - traefik.http.services.magento.loadbalancer.server.port=80

  traefik:
    image: traefik:v2.3
    ports:
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_LETSENCRYPT_FOLDER}:/letsencrypt
      - ${TRAEFIK_LOG_PATH}:/var/log/traefik.log
      - ${TRAEFIK_ACCESS_LOG_PATH}:/var/log/access.log
    command:
      - --api.insecure=false
      - --api.dashboard=true
      - --log.level=INFO
      - --log.filepath=/var/log/traefik.log
      - --log.format=json
      - --accesslog=true
      - --accesslog.filepath=/var/log/access.log
      - --accesslog.bufferingsize=100
      - --accesslog.format=json
      - --accesslog.fields.defaultmode=keep
      - --accesslog.fields.headers.defaultmode=keep
      - --accesslog.fields.headers.names.Authorization=drop
      - --providers.docker=true
      - --providers.docker.swarmMode=false
      - --providers.docker.exposedByDefault=false
      - --entrypoints.http.address=:${TRAEFIK_HTTP_PORT}
      - --entrypoints.https.address=:${TRAEFIK_HTTPS_PORT}
      - --certificatesResolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesResolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.letsencrypt.acme.tlsChallenge=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-to-https-redirect.rule=hostregexp(`{host:[a-z-.]+}`)
      - traefik.http.routers.http-to-https-redirect.entrypoints=http
      - traefik.http.routers.http-to-https-redirect.middlewares=http-to-https-redirect
      - traefik.http.middlewares.http-to-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.entryPoints=https
      - traefik.http.routers.api.tls=true
      - traefik.http.routers.api.tls.certresolver=letsencrypt
