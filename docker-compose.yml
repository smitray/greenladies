version: '3'
services:
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/dev.Dockerfile
    volumes:
      - /usr/src/app/packages/frontend/node_modules
      - ./packages/frontend:/usr/src/app/packages/frontend
      - /usr/src/app/packages/backend/node_modules
      - ./packages/backend:/usr/src/app/packages/backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.frontend.entryPoints=https

  backend:
    build:
      context: .
      dockerfile: packages/backend/dev.Dockerfile
    environment:
      - DOMAIN
      - MAGENTO_INTEGRATION_ACCESS_TOKEN=${BACKEND_MAGENTO_INTEGRATION_ACCESS_TOKEN}
      - KLARNA_API=${BACKEND_KLARNA_API}
      - KLARNA_USER_ID=${BACKEND_KLARNA_USER_ID}
      - KLARNA_PASSWORD=${BACKEND_KLARNA_PASSWORD}
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_DATABASE
      - PG_PASSWORD
      - PG_USERNAME
      - MAILCHIMP_API_TOKEN
      - MAILCHIMP_SERVER
      - MAILCHIMP_LIST
    volumes:
      - /usr/src/app/packages/backend/node_modules
      - ./packages/backend:/usr/src/app/packages/backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`api.${DOMAIN}`)
      - traefik.http.routers.backend.entryPoints=https

  admin:
    build:
      context: .
      dockerfile: packages/admin/dev.Dockerfile
    volumes:
      - /usr/src/app/packages/admin/node_modules
      - ./packages/admin:/usr/src/app/packages/admin
      - /usr/src/app/packages/backend/node_modules
      - ./packages/backend:/usr/src/app/packages/backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.admin.rule=Host(`${DOMAIN}`)&&PathPrefix(`/admin`)
      - traefik.http.routers.admin.entryPoints=https

  redis-cache:
    image: redis:6.0.6

  redis-ui:
    image: patrikx3/p3x-redis-ui:2020.10.315
    ports:
      - ${REDIS_UI_PORT}:7843
    volumes:
      - ./redis-ui/settings:/settings

  postgres:
    image: postgres:12.4
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USERNAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:4.24
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - pgadmindata:/usr/lib/pgadmin

  magento2:
    build:
      context: magento2
      dockerfile: Dockerfile
    volumes:
      - ${MAGENTO_DATA_FOLDER}:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.magento.rule=Host(`magento.${DOMAIN}`)&&(PathPrefix(`/admin`)||PathPrefix(`/media`)||PathPrefix(`/static`)||PathPrefix(`/rest`))
      - traefik.http.routers.magento.entryPoints=https
      - traefik.http.services.magento.loadbalancer.server.port=80

  magento2-phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0
    environment:
      - PMA_HOST=magento2-db
      - PMA_USER=${MAGENTO_MYSQL_USERNAME}
      - PMA_PASSWORD=${MAGENTO_MYSQL_PASSWORD}
    ports:
      - ${MAGENTO_PHPMYADMIN_PORT}:80

  traefik:
    image: traefik:v2.3
    ports:
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${TRAEFIK_LETSENCRYPT_FOLDER}:/letsencrypt
      - ${TRAEFIK_LOG_PATH}:/var/log/traefik.log
      - ${TRAEFIK_ACCESS_LOG_PATH}:/var/log/access.log
    command:
      - --api.insecure=false
      - --api.dashboard=true
      - --log.level=INFO
      - --log.filepath=/var/log/traefik.log
      - --log.format=json
      - --accesslog=true
      - --accesslog.filepath=/var/log/access.log
      - --accesslog.bufferingsize=100
      - --accesslog.format=json
      - --accesslog.fields.defaultmode=keep
      - --accesslog.fields.headers.defaultmode=keep
      - --accesslog.fields.headers.names.Authorization=drop
      - --providers.docker=true
      - --providers.docker.swarmMode=false
      - --providers.docker.exposedByDefault=false
      - --entrypoints.https.address=:${TRAEFIK_HTTP_PORT}
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.entryPoints=https

volumes:
  pgdata:
  pgadmindata:
